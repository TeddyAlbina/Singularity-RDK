Process & Execution Context: [31]
============================
Processes_ProcessHandle::g_Create(wchar_t *,int *,int,struct Processes_ProcessHandle *)
Processes_ProcessHandle::g_Create(wchar_t *,int *,int,struct Services_SharedHeapService_Allocation *,struct Processes_ProcessHandle *)
Processes_ProcessHandle::g_Create(wchar_t *,int *,int,wchar_t *,int,struct Services_SharedHeapService_Allocation *,struct Processes_ProcessHandle *)
Processes_ProcessHandle::g_Dispose(struct Processes_ProcessHandle)
Processes_ProcessHandle::g_GetExitCode(struct Processes_ProcessHandle)
Processes_ProcessHandle::g_GetPrincipal(int,struct Class_System_String *)
Processes_ProcessHandle::g_GetPrincipal(struct Processes_ProcessHandle,struct Class_System_String *)
Processes_ProcessHandle::g_GetProcessId(struct Processes_ProcessHandle)
Processes_ProcessHandle::g_Join(struct Processes_ProcessHandle,bool *)
Processes_ProcessHandle::g_Join(struct Processes_ProcessHandle,struct Struct_System_DateTime,bool *)
Processes_ProcessHandle::g_Join(struct Processes_ProcessHandle,struct Struct_System_TimeSpan,bool *)
Processes_ProcessHandle::g_Resume(struct Processes_ProcessHandle,bool)
Processes_ProcessHandle::g_Start(struct Processes_ProcessHandle)
Processes_ProcessHandle::g_Stop(struct Processes_ProcessHandle,int)
Processes_ProcessHandle::g_Suspend(struct Processes_ProcessHandle,bool)
Processes_ProcessHandle::g_SuspendBarrier(void)
Services_ProcessService::g_GetContextSwitchCount(void)
Services_ProcessService::g_GetCurrentProcessId(void)
Services_ProcessService::g_GetCycleCount(void)
Services_ProcessService::g_GetCyclesPerSecond(void)
Services_ProcessService::g_GetStartupArg(int,wchar_t *,int)
Services_ProcessService::g_GetStartupArgCount(void)
Services_ProcessService::g_GetStartupEndpointCount(void)
Services_ProcessService::g_GetUpTime(void)
Services_ProcessService::g_GetUtcTime(void)
Services_ProcessService::g_Stop(int)
Services_ProcessService::g_Waypoint(int)
Services_ProcessService::g_Waypoint0(void)
Services_ProcessService::g_WaypointDone(void)
Services_ProcessService::g_WaypointDump(void)

Hardware I/O: [13]
=============
Services_DeviceService::g_GetDynamicIoDmaRange(unsigned int,unsigned char *,unsigned char *)
Services_DeviceService::g_GetDynamicIoIrqRange(unsigned int,unsigned char *,unsigned char *)
Services_DeviceService::g_GetDynamicIoMemoryRange(unsigned int,unsigned char * *,unsigned int *,bool *,bool *)
Services_DeviceService::g_GetDynamicIoPortRange(unsigned int,unsigned short *,unsigned short *,bool *,bool *)
Services_DeviceService::g_GetDynamicIoRangeCount(void)
Services_DeviceService::g_GetFixedIoDmaRange(unsigned int,unsigned char *,unsigned char *)
Services_DeviceService::g_GetFixedIoIrqRange(unsigned int,unsigned char *,unsigned char *)
Services_DeviceService::g_GetFixedIoMemoryRange(unsigned int,unsigned char * *,unsigned int *,bool *,bool *)
Services_DeviceService::g_GetFixedIoPortRange(unsigned int,unsigned short *,unsigned short *,bool *,bool *)
Services_DeviceService::g_GetFixedIoRangeCount(void)
Services_DeviceService::g_GetIrqCount(unsigned char)
Services_DeviceService::g_GetPciConfig(unsigned short *,unsigned short *,unsigned short *)
Services_DeviceService::g_GetPnpSignature(wchar_t *,unsigned int)

Channels [6]
========
Services_EndpointCore::g_Connect(struct Services_SharedHeapService_Allocation *,struct Services_SharedHeapService_Allocation *)
Services_EndpointCore::g_Free(struct Services_SharedHeapService_Allocation *)
Services_EndpointCore::g_TransferBlockOwnership(struct Services_SharedHeapService_Allocation *,struct Services_EndpointCore *)
Services_EndpointCore::g_TransferContentOwnership(struct Services_EndpointCore *,struct Services_EndpointCore *)
Services_EndpointCore::m_FixEndpoint(struct Services_EndpointCore *)
Services_EndpointCore::m_GetHashPrivate(struct Services_EndpointCore *)

Page Table & Shared Heap: [34]
=========================
Services_PageTableService::g_Allocate(struct uintPtr *,struct uintPtr *,struct uintPtr *)
Services_PageTableService::g_Allocate(unsigned int,unsigned int,unsigned int)
Services_PageTableService::g_AllocateBelow(struct uintPtr *,struct uintPtr *,struct uintPtr *)
Services_PageTableService::g_AllocateBelow(unsigned int,unsigned int,unsigned int)
Services_PageTableService::g_AllocateExtend(struct uintPtr *,struct uintPtr *)
Services_PageTableService::g_AllocateExtend(unsigned int,unsigned int)
Services_PageTableService::g_Free(struct uintPtr *,struct uintPtr *)
Services_PageTableService::g_Free(unsigned int,unsigned int)
Services_PageTableService::g_GetPageCount(void)
Services_PageTableService::g_GetPageTable(void)
Services_PageTableService::g_GetProcessTag(void)
Services_PageTableService::g_Query(struct uintPtr *,struct uintPtr * *,struct uintPtr * *)
Services_PageTableService::g_Query(unsigned int,unsigned int *,unsigned int *)
Services_SharedHeapService::g_Free(struct Services_SharedHeapService_Allocation *)
Services_SharedHeapService::g_GetData(struct Services_SharedHeapService_Allocation *)
Services_SharedHeapService::g_GetSize(struct Services_SharedHeapService_Allocation *)
Services_SharedHeapService::g_GetType(struct Services_SharedHeapService_Allocation *)
Services_SharedHeapService::g_SetOwnerProcessId(struct Services_SharedHeapService_Allocation *,int)
Services_SharedHeapService::g_SetType(struct Services_SharedHeapService_Allocation *,struct uintPtr *)
Services_SharedHeapService_Allocation * Services_EndpointCore::g_Allocate(unsigned int,struct Types_SystemType)
Services_SharedHeapService_Allocation * Services_ProcessService::g_GetNamespaceEndpoint(void)
Services_SharedHeapService_Allocation * Services_ProcessService::g_GetNamespaceWriteEndpoint(void)
Services_SharedHeapService_Allocation * Services_ProcessService::g_GetStartupEndpoint(int)
Services_SharedHeapService_Allocation * Services_SharedHeapService::g_Allocate(struct uintPtr *,struct uintPtr *,unsigned int)
Services_SharedHeapService_Allocation * Services_SharedHeapService::g_Share(struct Services_SharedHeapService_Allocation *,struct uintPtr *,struct uintPtr *)
Services_SharedHeapService_Allocation * Services_SharedHeapService::g_Split(struct Services_SharedHeapService_Allocation *,struct uintPtr *)
Types_SystemAssembly::g_Register(int,int,int,int,struct Class_System_String *)
Types_SystemType::g_IsNull(struct Types_SystemType)
Types_SystemType::g_IsSubtype(struct Services_SharedHeapService_Allocation *,struct Types_SystemType)
Types_SystemType::g_IsSubtype(struct Struct_Microsoft_Singularity_Memory_SharedHeap_Allocation *,struct Types_SystemType)
Types_SystemType::g_IsSubtype(struct Types_SystemType,struct Types_SystemType)
Types_SystemType::g_IsSubType(struct uintPtr *,struct uintPtr *)
Types_SystemType::g_Register(__int64,__int64,struct Types_SystemType)
Types_SystemType::g_RootSystemType(void)

Stacks: [20]
=======
Services_StackService::g_GetUnlinkStackRange(unsigned __int64 *,unsigned __int64 *)
Services_StackService::g_LinkStack0(void)
Services_StackService::g_LinkStack12(void)
Services_StackService::g_LinkStack16(void)
Services_StackService::g_LinkStack20(void)
Services_StackService::g_LinkStack24(void)
Services_StackService::g_LinkStack28(void)
Services_StackService::g_LinkStack32(void)
Services_StackService::g_LinkStack36(void)
Services_StackService::g_LinkStack4(void)
Services_StackService::g_LinkStack40(void)
Services_StackService::g_LinkStack44(void)
Services_StackService::g_LinkStack48(void)
Services_StackService::g_LinkStack52(void)
Services_StackService::g_LinkStack56(void)
Services_StackService::g_LinkStack60(void)
Services_StackService::g_LinkStack64(void)
Services_StackService::g_LinkStack8(void)
Services_StackService::g_WalkStack(void)
Services_StackService::g_GetTLS(void)

Threading & Synchronization: [43]
============================
Threads_AutoResetEventHandle::g_Create(bool,struct Threads_AutoResetEventHandle *)
Threads_AutoResetEventHandle::g_Dispose(struct Threads_AutoResetEventHandle)
Threads_AutoResetEventHandle::g_Reset(struct Threads_AutoResetEventHandle)
Threads_AutoResetEventHandle::g_Set(struct Threads_AutoResetEventHandle)
Threads_AutoResetEventHandle::g_SetNoGC(struct Threads_AutoResetEventHandle)
Threads_ContainerHandle::g_Create(struct Threads_ContainerHandle *)
Threads_ContainerHandle::g_Dispose(struct Threads_ContainerHandle)
Threads_InterruptHandle::g_Ack(struct Threads_InterruptHandle)
Threads_InterruptHandle::g_Create(unsigned char,struct Threads_InterruptHandle *)
Threads_InterruptHandle::g_Dispose(struct Threads_InterruptHandle)
Threads_InterruptHandle::g_Pulse(struct Threads_InterruptHandle)
Threads_InterruptHandle::g_Wait(struct Threads_InterruptHandle)
Threads_ManualResetEventHandle::g_Create(bool,struct Threads_ManualResetEventHandle *)
Threads_ManualResetEventHandle::g_Dispose(struct Threads_ManualResetEventHandle)
Threads_ManualResetEventHandle::g_Reset(struct Threads_ManualResetEventHandle)
Threads_ManualResetEventHandle::g_Set(struct Threads_ManualResetEventHandle)
Threads_MutexHandle::g_Create(bool,struct Threads_MutexHandle *)
Threads_MutexHandle::g_Dispose(struct Threads_MutexHandle)
Threads_MutexHandle::g_Release(struct Threads_MutexHandle)
Threads_SyncHandle::g_WaitAny(struct Threads_SyncHandle *,int)
Threads_SyncHandle::g_WaitAny(struct Threads_SyncHandle *,int,struct Struct_System_DateTime)
Threads_SyncHandle::g_WaitAny(struct Threads_SyncHandle *,int,struct Struct_System_TimeSpan)
Threads_SyncHandle::g_WaitOne(struct Threads_SyncHandle)
Threads_SyncHandle::g_WaitOne(struct Threads_SyncHandle,struct Struct_System_DateTime)
Threads_SyncHandle::g_WaitOne(struct Threads_SyncHandle,struct Struct_System_TimeSpan)
Threads_SyncHandle::g_WaitOneNoGC(struct Threads_SyncHandle)
Threads_ThreadHandle Threads_ThreadHandle::g_CurrentThread(void)
Threads_ThreadHandle::g_Create(int,struct Threads_ContainerHandle,struct Threads_ThreadHandle *,void * *)
Threads_ThreadHandle::g_Dispose(struct Threads_ThreadHandle)
Threads_ThreadHandle::g_GetExecutionTime(struct Threads_ThreadHandle)
Threads_ThreadHandle::g_GetPrincipal(struct Class_System_String *)
Threads_ThreadHandle::g_GetPrincipal(struct Threads_ThreadHandle,struct Class_System_String *)
Threads_ThreadHandle::g_GetThreadLocalValue(void)
Threads_ThreadHandle::g_GetThreadState(struct Threads_ThreadHandle)
Threads_ThreadHandle::g_Join(struct Threads_ThreadHandle)
Threads_ThreadHandle::g_Join(struct Threads_ThreadHandle,struct Struct_System_DateTime)
Threads_ThreadHandle::g_Join(struct Threads_ThreadHandle,struct Struct_System_TimeSpan)
Threads_ThreadHandle::g_SetThreadLocalValue(struct uintPtr *)
Threads_ThreadHandle::g_Sleep(struct Struct_System_DateTime)
Threads_ThreadHandle::g_Sleep(struct Struct_System_TimeSpan)
Threads_ThreadHandle::g_SpinWait(int)
Threads_ThreadHandle::g_Start(struct Threads_ThreadHandle)
Threads_ThreadHandle::g_Yield(void)
